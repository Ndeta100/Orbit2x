// views/colorconverter/colorconverter.templ
package colorconverter

type ConversionResult struct {
	InputColor   string
	InputType    string
	HexColor     string
	RGBColor     string
	HSLColor     string
	PreviewColor string
	Error        string
}

templ Index() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Color Converter</title>
			<script src="https://unpkg.com/htmx.org@1.9.6"></script>
			<style>
			body {
				font-family: Arial, sans-serif;
				max-width: 800px;
				margin: 0 auto;
				padding: 20px;
				color: #333;
			}
			.card {
				background-color: white;
				border-radius: 8px;
				box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
				padding: 30px;
				margin-bottom: 30px;
			}
			h1 {
				color: #0e4174;
				text-align: center;
				margin-bottom: 10px;
			}
			.description {
				text-align: center;
				color: #666;
				margin-bottom: 20px;
			}
			.form-container {
				margin-bottom: 20px;
			}
			input[type="text"] {
				width: 100%;
				padding: 10px;
				border: 1px solid #ddd;
				border-radius: 4px;
				font-family: monospace;
				margin-bottom: 10px;
				box-sizing: border-box;
			}
			.buttons {
				display: flex;
				gap: 10px;
				margin-bottom: 20px;
			}
			button {
				padding: 10px 15px;
				background-color: #0e4174;
				color: white;
				border: none;
				border-radius: 4px;
				cursor: pointer;
				flex-grow: 1;
			}
			button:hover {
				background-color: #0a325e;
			}
			.loading {
				text-align: center;
				padding: 20px;
				display: none;
			}
			.htmx-request .loading {
				display: block;
			}
			.results {
				margin-top: 20px;
			}
			.result-section {
				background-color: #f5f5f5;
				border-radius: 4px;
				padding: 15px;
				margin-bottom: 15px;
			}
			.result-title {
				font-weight: bold;
				margin-bottom: 10px;
				color: #0e4174;
			}
			.result-content {
				background-color: white;
				border: 1px solid #ddd;
				border-radius: 4px;
				padding: 10px;
				font-family: monospace;
				white-space: pre-wrap;
				word-break: break-all;
			}
			.error {
				background-color: #ffebee;
				border-left: 5px solid #f44336;
				padding: 15px;
				border-radius: 5px;
			}
			.copy-button {
				margin-top: 10px;
				background-color: #eee;
				color: #333;
				padding: 5px 10px;
				border: none;
				border-radius: 4px;
				cursor: pointer;
				font-size: 12px;
			}
			.copy-button:hover {
				background-color: #ddd;
			}
			.color-format-selector {
				display: flex;
				gap: 10px;
				margin-bottom: 15px;
			}
			.format-option {
				flex: 1;
				text-align: center;
				padding: 10px;
				border: 1px solid #ddd;
				border-radius: 4px;
				cursor: pointer;
			}
			.format-option.active {
				background-color: #e8f4fd;
				border-color: #0e4174;
				color: #0e4174;
				font-weight: bold;
			}
			.color-preview {
				width: 100%;
				height: 80px;
				border-radius: 4px;
				border: 1px solid #ddd;
				margin-bottom: 15px;
			}
			.color-table {
				width: 100%;
				border-collapse: collapse;
				margin-top: 10px;
			}
			.color-table th, .color-table td {
				padding: 8px;
				text-align: left;
				border-bottom: 1px solid #eee;
			}
			.color-table th {
				font-weight: bold;
				color: #0e4174;
				width: 30%;
			}
			.color-table td {
				font-family: monospace;
				word-break: break-all;
			}
			.copy-cell {
				width: 60px;
				text-align: center !important;
			}
			.table-copy-btn {
				background-color: #eee;
				color: #333;
				border: none;
				border-radius: 4px;
				padding: 3px 8px;
				font-size: 12px;
				cursor: pointer;
			}
			.table-copy-btn:hover {
				background-color: #ddd;
			}
			.color-info {
				margin-top: 15px;
				display: flex;
				gap: 15px;
			}
			.color-info-item {
				flex: 1;
				text-align: center;
			}
			.color-info-label {
				font-size: 12px;
				color: #666;
				margin-bottom: 5px;
			}
			.color-value {
				font-family: monospace;
				padding: 5px;
				background-color: #f5f5f5;
				border-radius: 4px;
				border: 1px solid #ddd;
			}
			.random-color-btn {
				background-color: #4caf50;
				margin-top: 20px;
			}
			.random-color-btn:hover {
				background-color: #388e3c;
			}
			.info-box {
				background-color: #e8f4fd;
				border-left: 5px solid #0e4174;
				padding: 15px;
				margin-bottom: 20px;
				font-size: 14px;
				line-height: 1.5;
			}
			.popular-colors {
				display: flex;
				flex-wrap: wrap;
				gap: 8px;
				margin-top: 15px;
			}
			.color-swatch {
				width: 30px;
				height: 30px;
				border-radius: 4px;
				border: 1px solid #ddd;
				cursor: pointer;
			}
			.color-swatch:hover {
				transform: scale(1.1);
			}
		</style>
		</head>
		<body>
			<div class="card">
				<h1>Color Converter</h1>
				<p class="description">Convert between HEX, RGB, and HSL color formats.</p>
				<div class="info-box">
					Color conversion tools help web developers and designers work with different color formats:
					<br/>
					• <strong>HEX</strong> (#RRGGBB) - Commonly used in CSS and HTML
					<br/>
					• <strong>RGB</strong> (rgb(r, g, b)) - Used in CSS and graphics programming
					<br/>
					• <strong>HSL</strong> (hsl(h, s%, l%)) - Intuitive for adjusting hue, saturation, and lightness
				</div>
				<div class="form-container">
					<div class="color-format-selector">
						<div class="format-option active" onclick="selectFormat('hex', this)">HEX</div>
						<div class="format-option" onclick="selectFormat('rgb', this)">RGB</div>
						<div class="format-option" onclick="selectFormat('hsl', this)">HSL</div>
					</div>
					<form
						id="color-form"
						hx-post="/color/convert"
						hx-target="#results"
						hx-indicator=".loading"
					>
						<input type="hidden" name="from" id="from-format" value="hex"/>
						<input
							type="text"
							name="color"
							id="color-input"
							placeholder="Enter a color (e.g., #3366ff)"
							required
							onkeyup="updatePattern()"
						/>
						<div style="margin-bottom: 10px;">
							<strong>Format Help:</strong>
							<span id="format-help">HEX format: #RGB, #RGBA, #RRGGBB, or #RRGGBBAA</span>
						</div>
						<button type="submit">Convert</button>
					</form>
					<button
						class="random-color-btn"
						hx-get="/color/random"
						hx-target="#results"
						hx-indicator=".loading"
					>
						Generate Random Color
					</button>
					<div style="margin-top: 20px;">
						<div class="result-title">Popular Colors:</div>
						<div class="popular-colors">
							<div class="color-swatch" style="background-color: #ff0000;" title="Red" onclick="setColor('#ff0000')"></div>
							<div class="color-swatch" style="background-color: #00ff00;" title="Green" onclick="setColor('#00ff00')"></div>
							<div class="color-swatch" style="background-color: #0000ff;" title="Blue" onclick="setColor('#0000ff')"></div>
							<div class="color-swatch" style="background-color: #ffff00;" title="Yellow" onclick="setColor('#ffff00')"></div>
							<div class="color-swatch" style="background-color: #ff00ff;" title="Magenta" onclick="setColor('#ff00ff')"></div>
							<div class="color-swatch" style="background-color: #00ffff;" title="Cyan" onclick="setColor('#00ffff')"></div>
							<div class="color-swatch" style="background-color: #000000;" title="Black" onclick="setColor('#000000')"></div>
							<div class="color-swatch" style="background-color: #ffffff;" title="White" onclick="setColor('#ffffff')"></div>
							<div class="color-swatch" style="background-color: #ff8000;" title="Orange" onclick="setColor('#ff8000')"></div>
							<div class="color-swatch" style="background-color: #8000ff;" title="Purple" onclick="setColor('#8000ff')"></div>
							<div class="color-swatch" style="background-color: #808080;" title="Gray" onclick="setColor('#808080')"></div>
							<div class="color-swatch" style="background-color: #008080;" title="Teal" onclick="setColor('#008080')"></div>
						</div>
					</div>
				</div>
				<div class="loading">
					<svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" stroke="#0e4174">
						<g fill="none" fill-rule="evenodd">
							<g transform="translate(1 1)" stroke-width="2">
								<circle stroke-opacity=".5" cx="18" cy="18" r="18"></circle>
								<path d="M36 18c0-9.94-8.06-18-18-18">
									<animateTransform attributeName="transform" type="rotate" from="0 18 18" to="360 18 18" dur="1s" repeatCount="indefinite"></animateTransform>
								</path>
							</g>
						</g>
					</svg>
				</div>
				<div id="results">
					<!-- Results will be loaded here -->
				</div>
			</div>
			<script>
			function selectFormat(format, element) {
				// Update hidden input
				document.getElementById('from-format').value = format;

				// Update active class
				document.querySelectorAll('.format-option').forEach(el => {
					el.classList.remove('active');
				});
				element.classList.add('active');

				// Update placeholder and help text
				const input = document.getElementById('color-input');
				const help = document.getElementById('format-help');

				switch(format) {
					case 'hex':
						input.placeholder = 'Enter a color (e.g., #3366ff)';
						help.textContent = 'HEX format: #RGB, #RGBA, #RRGGBB, or #RRGGBBAA';
						break;
					case 'rgb':
						input.placeholder = 'Enter a color (e.g., rgb(51, 102, 255))';
						help.textContent = 'RGB format: rgb(r, g, b) or rgba(r, g, b, a) where r,g,b are 0-255 and a is 0-1';
						break;
					case 'hsl':
						input.placeholder = 'Enter a color (e.g., hsl(220, 100%, 60%))';
						help.textContent = 'HSL format: hsl(h, s%, l%) or hsla(h, s%, l%, a) where h is 0-360, s,l are 0-100%, and a is 0-1';
						break;
				}
			}

			function updatePattern() {
				// Could add validation here
			}

			function copyColorValue(value) {
				navigator.clipboard.writeText(value);
				alert("Color value copied to clipboard!");
			}

			function setColor(color) {
				const input = document.getElementById('color-input');
				input.value = color;

				// Select HEX format
				selectFormat('hex', document.querySelector('.format-option:first-child'));

				// Submit the form
				document.getElementById('color-form').requestSubmit();
			}
		</script>
		</body>
	</html>
}

templ Results(result ConversionResult) {
	<div class="results">
		if result.Error != "" {
			<div class="error">
				<p>Error: { result.Error }</p>
			</div>
		} else {
			<div class="result-title">Color Preview:</div>
			<div class="color-preview" style={ "background-color: " + result.PreviewColor }></div>
			<div class="color-info">
				<div class="color-info-item">
					<div class="color-info-label">HEX</div>
					<div class="color-value">{ result.HexColor }</div>
				</div>
				<div class="color-info-item">
					<div class="color-info-label">RGB</div>
					<div class="color-value">{ result.RGBColor }</div>
				</div>
				<div class="color-info-item">
					<div class="color-info-label">HSL</div>
					<div class="color-value">{ result.HSLColor }</div>
				</div>
			</div>
			<div class="result-section">
				<div class="result-title">Color Values:</div>
				<table class="color-table">
					<thead>
						<tr>
							<th>Format</th>
							<th>Value</th>
							<th class="copy-cell">Copy</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<th>HEX</th>
							<td>{ result.HexColor }</td>
							<td class="copy-cell">
								<button class="table-copy-btn" onclick="copyColorValue('{result.HexColor}')">Copy</button>
							</td>
						</tr>
						<tr>
							<th>RGB</th>
							<td>{ result.RGBColor }</td>
							<td class="copy-cell">
								<button class="table-copy-btn" onclick="copyColorValue('{result.RGBColor}')">Copy</button>
							</td>
						</tr>
						<tr>
							<th>HSL</th>
							<td>{ result.HSLColor }</td>
							<td class="copy-cell">
								<button class="table-copy-btn" onclick="copyColorValue('{result.HSLColor}')">Copy</button>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<div class="result-section">
				<div class="result-title">CSS Examples:</div>
				<div class="result-content">
					<div><strong>HEX:</strong> color: { result.HexColor };</div>
					<div><strong>RGB:</strong> color: { result.RGBColor };</div>
					<div><strong>HSL:</strong> color: { result.HSLColor };</div>
					<div><strong>Background:</strong> background-color: { result.HexColor };</div>
				</div>
			</div>
		}
	</div>
}
