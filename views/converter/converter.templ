// views/converter/converter.templ
package converter

import "fmt"

type ConversionResult struct {
	OriginalText  string
	ConvertedText string
	SourceFormat  string // "csv" or "json"
	TargetFormat  string // "json" or "csv"
	Error         string
}

templ Index() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>CSV & JSON Converter</title>
			<script src="https://unpkg.com/htmx.org@1.9.6"></script>
			<style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                color: #333;
            }
            .card {
                background-color: white;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                padding: 30px;
                margin-bottom: 30px;
            }
            h1 {
                color: #0e4174;
                text-align: center;
                margin-bottom: 10px;
            }
            .description {
                text-align: center;
                color: #666;
                margin-bottom: 20px;
            }
            .form-container {
                margin-bottom: 20px;
            }
            textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                min-height: 180px;
                font-family: monospace;
                resize: vertical;
                margin-bottom: 10px;
            }
            .buttons {
                display: flex;
                gap: 10px;
                margin-bottom: 20px;
            }
            button {
                padding: 10px 15px;
                background-color: #0e4174;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                flex-grow: 1;
            }
            button:hover {
                background-color: #0a325e;
            }
            .loading {
                text-align: center;
                padding: 20px;
                display: none;
            }
            .htmx-request .loading {
                display: block;
            }
            .results {
                margin-top: 20px;
            }
            .result-section {
                background-color: #f5f5f5;
                border-radius: 4px;
                padding: 15px;
                margin-bottom: 15px;
            }
            .result-title {
                font-weight: bold;
                margin-bottom: 10px;
            }
            .result-content {
                background-color: white;
                border: 1px solid #ddd;
                border-radius: 4px;
                padding: 10px;
                font-family: monospace;
                white-space: pre-wrap;
                word-break: break-all;
                max-height: 300px;
                overflow-y: auto;
            }
            .error {
                background-color: #ffebee;
                border-left: 5px solid #f44336;
                padding: 15px;
                border-radius: 5px;
            }
            .copy-button {
                margin-top: 10px;
                background-color: #eee;
                color: #333;
                padding: 5px 10px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 12px;
            }
            .copy-button:hover {
                background-color: #ddd;
            }
            .tab-container {
                margin-bottom: 20px;
            }
            .tabs {
                display: flex;
                border-bottom: 1px solid #ddd;
            }
            .tab {
                padding: 10px 15px;
                cursor: pointer;
                border: 1px solid transparent;
                border-bottom: none;
                border-radius: 4px 4px 0 0;
                margin-right: 5px;
            }
            .tab.active {
                background-color: #f5f5f5;
                border-color: #ddd;
                border-bottom-color: #f5f5f5;
            }
            .tab-content {
                display: none;
                padding: 20px;
                border: 1px solid #ddd;
                border-top: none;
                background-color: #f5f5f5;
            }
            .tab-content.active {
                display: block;
            }
            .options {
                margin-bottom: 15px;
            }
            .option-group {
                margin-bottom: 10px;
            }
            .option-label {
                font-weight: bold;
                margin-bottom: 5px;
            }
            .option-controls {
                display: flex;
                gap: 10px;
            }
            .option-controls select {
                padding: 5px;
                border-radius: 4px;
                border: 1px solid #ddd;
            }
            .checkbox-group {
                display: flex;
                align-items: center;
                margin-bottom: 10px;
            }
            .checkbox-group input {
                margin-right: 5px;
            }
        </style>
		</head>
		<body>
			<div class="card">
				<h1>CSV & JSON Converter</h1>
				<p class="description">Convert between CSV and JSON formats with ease.</p>
				<div class="tab-container">
					<div class="tabs">
						<div class="tab active" onclick="switchTab('csv-to-json-tab', this)">CSV to JSON</div>
						<div class="tab" onclick="switchTab('json-to-csv-tab', this)">JSON to CSV</div>
					</div>
					<div id="csv-to-json-tab" class="tab-content active">
						<div class="form-container">
							<div class="options">
								<div class="option-group">
									<div class="option-label">JSON Indentation:</div>
									<div class="option-controls">
										<select name="indent" form="csv-to-json-form">
											<option value="2">2 spaces</option>
											<option value="4" selected>4 spaces</option>
											<option value="8">8 spaces</option>
										</select>
									</div>
								</div>
								<div class="checkbox-group">
									<input type="checkbox" id="csv-headers" name="headers" form="csv-to-json-form" checked/>
									<label for="csv-headers">CSV has headers</label>
								</div>
							</div>
							<form id="csv-to-json-form" hx-post="/converter/csv-to-json" hx-target="#results" hx-indicator=".loading">
								<textarea name="text" placeholder="Paste your CSV data here..." required></textarea>
								<button type="submit">Convert CSV to JSON</button>
							</form>
						</div>
					</div>
					<div id="json-to-csv-tab" class="tab-content">
						<div class="form-container">
							<div class="options">
								<div class="option-group">
									<div class="option-label">CSV Delimiter:</div>
									<div class="option-controls">
										<select name="delimiter" form="json-to-csv-form">
											<option value="," selected>Comma (,)</option>
											<option value=";">Semicolon (;)</option>
											<option value="\t">Tab</option>
										</select>
									</div>
								</div>
								<div class="checkbox-group">
									<input type="checkbox" id="include-headers" name="includeHeaders" form="json-to-csv-form" checked/>
									<label for="include-headers">Include headers</label>
								</div>
							</div>
							<form id="json-to-csv-form" hx-post="/converter/json-to-csv" hx-target="#results" hx-indicator=".loading">
								<textarea name="text" placeholder="Paste your JSON data here..." required></textarea>
								<button type="submit">Convert JSON to CSV</button>
							</form>
						</div>
					</div>
				</div>
				<div class="loading">
					<svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" stroke="#0e4174">
						<g fill="none" fill-rule="evenodd">
							<g transform="translate(1 1)" stroke-width="2">
								<circle stroke-opacity=".5" cx="18" cy="18" r="18"></circle>
								<path d="M36 18c0-9.94-8.06-18-18-18">
									<animateTransform attributeName="transform" type="rotate" from="0 18 18" to="360 18 18" dur="1s" repeatCount="indefinite"></animateTransform>
								</path>
							</g>
						</g>
					</svg>
				</div>
				<div id="results">
					<!-- Results will be loaded here -->
				</div>
			</div>
			<script>
            function switchTab(tabId, tabElement) {
                // Hide all tab contents
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.remove('active');
                });

                // Remove active class from all tabs
                document.querySelectorAll('.tab').forEach(tab => {
                    tab.classList.remove('active');
                });

                // Show the selected tab content
                document.getElementById(tabId).classList.add('active');

                // Add active class to the clicked tab
                tabElement.classList.add('active');
            }

            function copyToClipboard(elementId) {
                const element = document.getElementById(elementId);
                const text = element.textContent;

                navigator.clipboard.writeText(text).then(() => {
                    const button = document.querySelector(`button[onclick="copyToClipboard('${elementId}')"]`);
                    const originalText = button.textContent;
                    button.textContent = "Copied!";

                    setTimeout(() => {
                        button.textContent = originalText;
                    }, 2000);
                });
            }
        </script>
		</body>
	</html>
}

templ Results(result ConversionResult) {
	<div class="results">
		if result.Error != "" {
			<div class="error">
				<p>Error: { result.Error }</p>
			</div>
		} else {
			<div class="result-section">
				<div class="result-title">Converted { result.SourceFormat } to { result.TargetFormat }:</div>
				<div id="converted-text" class="result-content">{ result.ConvertedText }</div>
				<button class="copy-button" onclick="copyToClipboard('converted-text')">Copy { result.TargetFormat }</button>
			</div>
			<p style="text-align: center; margin-top: 20px; color: #666;">
				{ fmt.Sprintf("Successfully converted from %s to %s format.", result.SourceFormat, result.TargetFormat) }
			</p>
		}
	</div>
}
